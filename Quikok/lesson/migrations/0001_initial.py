# Generated by Django 3.1.5 on 2021-03-16 15:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='lesson_booking_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('student_auth_id', models.IntegerField()),
                ('parent_auth_id', models.IntegerField(default=-1)),
                ('booked_by', models.CharField(max_length=20)),
                ('last_changed_by', models.CharField(max_length=20)),
                ('booking_set_id', models.IntegerField()),
                ('remaining_minutes', models.IntegerField()),
                ('booking_date_and_time', models.CharField(max_length=400)),
                ('booking_start_datetime', models.DateTimeField()),
                ('booking_status', models.CharField(max_length=60)),
                ('remark', models.CharField(default='', max_length=40)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_changed_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '預約-課程預約資訊',
                'verbose_name_plural': '預約-課程預約資訊',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='lesson_card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corresponding_lesson_id', models.IntegerField()),
                ('teacher_thumbnail_path', models.TextField(blank=True, null=True)),
                ('teacher_nickname', models.CharField(max_length=40)),
                ('teacher_auth_id', models.IntegerField()),
                ('is_this_teacher_male', models.BooleanField(default=True)),
                ('is_this_lesson_online_or_offline', models.CharField(default='online', max_length=10)),
                ('big_title', models.CharField(max_length=10)),
                ('little_title', models.CharField(max_length=10)),
                ('title_color', models.CharField(max_length=7)),
                ('background_picture_code', models.IntegerField()),
                ('background_picture_path', models.TextField(blank=True, null=True)),
                ('lesson_title', models.CharField(max_length=14)),
                ('highlight_1', models.CharField(max_length=10)),
                ('highlight_2', models.CharField(max_length=10)),
                ('highlight_3', models.CharField(max_length=10)),
                ('price_per_hour', models.IntegerField()),
                ('best_sale', models.CharField(max_length=20)),
                ('education', models.CharField(blank=True, max_length=60, null=True)),
                ('education_is_approved', models.BooleanField()),
                ('working_experience', models.CharField(blank=True, max_length=100, null=True)),
                ('working_experience_is_approved', models.BooleanField()),
                ('lesson_avg_score', models.FloatField(default=0.0)),
                ('lesson_reviewed_times', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '課程小卡資訊',
                'verbose_name_plural': '課程小卡資訊',
            },
        ),
        migrations.CreateModel(
            name='lesson_completed_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_booking_info_id', models.IntegerField()),
                ('student_remaining_minutes_of_each_purchased_lesson_set_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('student_auth_id', models.IntegerField()),
                ('booking_time_in_minutes', models.IntegerField()),
                ('teacher_declared_start_time', models.DateTimeField()),
                ('teacher_declared_end_time', models.DateTimeField()),
                ('teacher_declared_time_in_minutes', models.IntegerField()),
                ('is_student_disagree_with_teacher_s_declared_time', models.BooleanField(default=False)),
                ('is_student_confirmed', models.BooleanField(default=False)),
                ('student_confirmed_deadline', models.DateField()),
                ('confirmed_by_quikok', models.BooleanField(default=False)),
                ('quikok_remarks', models.TextField(blank=True, default='', null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_changed_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '預約-完課紀錄',
                'verbose_name_plural': '預約-完課紀錄',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='lesson_info_for_users_not_signed_up',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dummy_teacher_id', models.CharField(max_length=100)),
                ('big_title', models.CharField(max_length=10)),
                ('little_title', models.CharField(max_length=10)),
                ('title_color', models.CharField(max_length=7)),
                ('background_picture_code', models.IntegerField()),
                ('background_picture_path', models.TextField(blank=True)),
                ('lesson_title', models.CharField(max_length=14)),
                ('price_per_hour', models.IntegerField()),
                ('lesson_has_one_hour_package', models.BooleanField()),
                ('trial_class_price', models.IntegerField()),
                ('highlight_1', models.CharField(max_length=10)),
                ('highlight_2', models.CharField(max_length=10)),
                ('highlight_3', models.CharField(max_length=10)),
                ('discount_price', models.CharField(max_length=30)),
                ('lesson_intro', models.TextField(blank=True, null=True)),
                ('how_does_lesson_go', models.TextField(blank=True, null=True)),
                ('target_students', models.TextField(blank=True, null=True)),
                ('lesson_remarks', models.TextField(blank=True, null=True)),
                ('syllabus', models.TextField(blank=True, null=True)),
                ('lesson_attributes', models.TextField(blank=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='lesson_reviews_from_students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corresponding_lesson_id', models.IntegerField()),
                ('corresponding_lesson_booking_info_id', models.IntegerField()),
                ('corresponding_lesson_completed_record_id', models.IntegerField()),
                ('student_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('score_given', models.IntegerField(blank=True, null=True)),
                ('is_teacher_late_for_lesson', models.BooleanField(blank=True, null=True)),
                ('is_teacher_frivolous_in_lesson', models.BooleanField(blank=True, null=True)),
                ('is_teacher_incapable', models.BooleanField(blank=True, null=True)),
                ('remark_given', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '評價-學生對老師/課程',
                'verbose_name_plural': '評價-學生對老師/課程',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='lesson_sales_sets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('price_per_hour', models.IntegerField()),
                ('sales_set', models.CharField(max_length=20)),
                ('total_hours_of_the_sales_set', models.IntegerField()),
                ('total_amount_of_the_sales_set', models.IntegerField()),
                ('price_per_hour_after_discount', models.IntegerField()),
                ('selling_volume', models.IntegerField(default=0)),
                ('taking_lesson_volume', models.IntegerField(default=0)),
                ('fulfilled_volume', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_sold_time', models.DateTimeField(auto_now=True)),
                ('is_open', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '課程方案資訊',
                'verbose_name_plural': '課程方案資訊',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='student_reviews_from_teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corresponding_lesson_id', models.IntegerField()),
                ('corresponding_lesson_booking_info_id', models.IntegerField()),
                ('corresponding_lesson_completed_record_id', models.IntegerField()),
                ('student_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('score_given', models.PositiveIntegerField(blank=True, null=True)),
                ('is_student_late_for_lesson', models.BooleanField(blank=True, null=True)),
                ('is_student_frivolous_in_lesson', models.BooleanField(blank=True, null=True)),
                ('is_student_or_parents_not_friendly', models.BooleanField(blank=True, null=True)),
                ('remark_given', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '評價-老師對學生',
                'verbose_name_plural': '評價-老師對學生',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='lesson_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('big_title', models.CharField(max_length=10)),
                ('little_title', models.CharField(max_length=10)),
                ('title_color', models.CharField(max_length=7)),
                ('background_picture_code', models.IntegerField()),
                ('background_picture_path', models.TextField(blank=True)),
                ('lesson_title', models.CharField(max_length=14)),
                ('price_per_hour', models.IntegerField()),
                ('lesson_has_one_hour_package', models.BooleanField()),
                ('trial_class_price', models.IntegerField()),
                ('discount_price', models.CharField(max_length=30)),
                ('highlight_1', models.CharField(max_length=10)),
                ('highlight_2', models.CharField(max_length=10)),
                ('highlight_3', models.CharField(max_length=10)),
                ('lesson_intro', models.TextField(blank=True, null=True)),
                ('how_does_lesson_go', models.TextField(blank=True, null=True)),
                ('is_this_lesson_online_or_offline', models.CharField(default='online', max_length=10)),
                ('target_students', models.TextField(blank=True, null=True)),
                ('lesson_remarks', models.TextField(blank=True, null=True)),
                ('syllabus', models.TextField(blank=True, null=True)),
                ('lesson_attributes', models.TextField(blank=True)),
                ('lesson_avg_score', models.FloatField(default=0.0)),
                ('lesson_reviewed_times', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('selling_status', models.CharField(max_length=20)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_of_the_lesson', to='account.teacher_profile')),
            ],
            options={
                'verbose_name': '課程詳細資訊',
                'verbose_name_plural': '課程詳細資訊',
                'ordering': ['-created_time'],
            },
        ),
    ]
