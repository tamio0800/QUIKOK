# Generated by Django 3.1.5 on 2021-03-16 15:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='student_owing_teacher_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('lesson_id', models.IntegerField()),
                ('lesson_booking_info_id', models.IntegerField()),
                ('owing_minutes', models.PositiveIntegerField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '學生積欠時數',
                'verbose_name_plural': '學生積欠時數',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='student_purchase_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('teacher_nickname', models.CharField(max_length=40)),
                ('purchase_date', models.DateTimeField()),
                ('payment_deadline', models.DateTimeField()),
                ('lesson_id', models.IntegerField()),
                ('lesson_title', models.CharField(max_length=30)),
                ('lesson_sales_set_id', models.IntegerField()),
                ('price', models.IntegerField()),
                ('purchased_with_q_points', models.IntegerField(default=0)),
                ('purchased_with_money', models.IntegerField()),
                ('part_of_bank_account_code', models.CharField(default='', max_length=30)),
                ('payment_status', models.CharField(default='unpaid', max_length=30)),
                ('updated_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '學生購買紀錄',
                'verbose_name_plural': '學生購買紀錄',
                'ordering': ['-updated_time'],
            },
        ),
        migrations.CreateModel(
            name='student_refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_auth_id', models.IntegerField()),
                ('snapshot_balance', models.IntegerField(default=0)),
                ('txn_fee', models.IntegerField(default=0)),
                ('refund_amount', models.IntegerField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('refund_status', models.CharField(default='unpaid', max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('bank_account_code', models.CharField(default='', max_length=30)),
                ('bank_name', models.CharField(default='', max_length=30)),
                ('bank_code', models.CharField(default='', max_length=5)),
            ],
            options={
                'verbose_name': '學生退款紀錄(退款用)',
                'verbose_name_plural': '學生退款紀錄(退款用)',
            },
        ),
        migrations.CreateModel(
            name='student_remaining_minutes_of_each_purchased_lesson_set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_purchase_record_id', models.IntegerField(default=0)),
                ('student_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('lesson_id', models.IntegerField()),
                ('lesson_sales_set_id', models.IntegerField()),
                ('available_remaining_minutes', models.IntegerField()),
                ('withholding_minutes', models.IntegerField(default=0)),
                ('confirmed_consumed_minutes', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_changed_time', models.DateTimeField(auto_now=True)),
                ('is_refunded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '學生課程方案剩餘時數',
                'verbose_name_plural': '學生課程方案剩餘時數',
            },
        ),
        migrations.CreateModel(
            name='student_remaining_minutes_when_request_refund_each_purchased_lesson_set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_purchase_record_id', models.IntegerField(default=0)),
                ('purchased_lesson_sales_sets_id', models.IntegerField(default=0)),
                ('snapshot_available_remaining_minutes', models.IntegerField()),
                ('snapshot_withholding_minutes', models.IntegerField(default=0)),
                ('available_minutes_turn_into_q_points', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_changed_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '學生訂單退款換算Q幣',
                'verbose_name_plural': '學生訂單退款換算Q幣',
            },
        ),
        migrations.CreateModel(
            name='teacher_refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_auth_id', models.IntegerField()),
                ('snapshot_balance', models.IntegerField(default=0)),
                ('txn_fee', models.IntegerField(default=0)),
                ('refund_amount', models.IntegerField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('refund_status', models.CharField(default='unpaid', max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('bank_account_code', models.CharField(default='', max_length=30)),
                ('bank_name', models.CharField(default='', max_length=30)),
                ('bank_code', models.CharField(default='', max_length=5)),
            ],
            options={
                'verbose_name': '老師提款紀錄(退款用)',
                'verbose_name_plural': '老師提款紀錄(退款用)',
            },
        ),
        migrations.CreateModel(
            name='user_purchase_exam_bank_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_authID', models.IntegerField()),
                ('exam_bank_sales_set_id', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_valid', models.BooleanField(default=False)),
                ('price', models.IntegerField()),
                ('purchased_with_money', models.IntegerField()),
                ('purchased_with_q_points', models.IntegerField(default=0)),
                ('part_of_bank_account_code', models.CharField(default='', max_length=30)),
                ('is_refunded', models.BooleanField(default=False)),
                ('is_preorder', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '題庫訂閱紀錄',
                'verbose_name_plural': '題庫訂閱紀錄',
                'ordering': ['-updated_time'],
            },
        ),
    ]
