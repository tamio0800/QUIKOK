# Generated by Django 3.1.5 on 2021-03-04 00:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='auth_check',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_auth_type', models.CharField(max_length=30)),
                ('category_name', models.CharField(max_length=30)),
                ('url_pattern', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='connects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=191)),
                ('connected_user', models.CharField(max_length=191)),
            ],
        ),
        migrations.CreateModel(
            name='favorite_lessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower_auth_id', models.IntegerField()),
                ('lesson_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='favorite_teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower_auth_id', models.IntegerField()),
                ('teacher_auth_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who_are_you', models.CharField(max_length=40)),
                ('contact', models.CharField(max_length=150)),
                ('problem', models.TextField()),
                ('on_which_page', models.TextField()),
                ('is_signed_in', models.BooleanField()),
                ('is_replied', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('last_edited_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='student_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_id', models.IntegerField()),
                ('username', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('withholding_balance', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=40)),
                ('nickname', models.CharField(max_length=40)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('is_male', models.BooleanField()),
                ('intro', models.TextField(blank=True, default='', max_length=300, null=True)),
                ('role', models.CharField(max_length=40)),
                ('mobile', models.CharField(max_length=12)),
                ('user_folder', models.TextField(blank=True, null=True)),
                ('info_folder', models.TextField(blank=True, null=True)),
                ('thumbnail_dir', models.TextField(blank=True, null=True)),
                ('update_someone_by_email', models.CharField(blank=True, max_length=405, null=True)),
                ('bank_account_code', models.CharField(default='', max_length=30)),
                ('bank_name', models.CharField(default='', max_length=30)),
                ('bank_code', models.CharField(default='', max_length=5)),
                ('date_join', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '學生個人資料',
                'verbose_name_plural': '學生個人資料',
            },
        ),
        migrations.CreateModel(
            name='student_review_aggregated_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_auth_id', models.IntegerField(default=-1)),
                ('score_given_sum', models.PositiveIntegerField(default=0)),
                ('reviewed_times', models.PositiveIntegerField(default=0)),
                ('receiving_review_lesson_minutes_sum', models.PositiveIntegerField(default=0)),
                ('is_student_late_for_lesson_times', models.PositiveIntegerField(default=0)),
                ('is_student_frivolous_in_lesson_times', models.PositiveIntegerField(default=0)),
                ('is_student_or_parents_not_friendly_times', models.PositiveIntegerField(default=0)),
                ('last_updated_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '評價-學生評價儀表板',
                'verbose_name_plural': '評價-學生評價儀表板',
                'ordering': ['-last_updated_time'],
            },
        ),
        migrations.CreateModel(
            name='teacher_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_id', models.IntegerField()),
                ('username', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('withholding_balance', models.PositiveIntegerField(default=0)),
                ('unearned_balance', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=40)),
                ('nickname', models.CharField(max_length=40)),
                ('birth_date', models.DateField(null=True)),
                ('is_male', models.BooleanField()),
                ('intro', models.TextField()),
                ('mobile', models.CharField(max_length=12)),
                ('thumbnail_dir', models.TextField(blank=True, null=True)),
                ('user_folder', models.TextField(blank=True, null=True)),
                ('info_folder', models.TextField(blank=True, null=True)),
                ('tutor_experience', models.CharField(max_length=12)),
                ('subject_type', models.TextField(blank=True, null=True)),
                ('education_1', models.CharField(max_length=60)),
                ('education_2', models.CharField(blank=True, max_length=60, null=True)),
                ('education_3', models.CharField(blank=True, max_length=60, null=True)),
                ('cert_unapproved', models.TextField(blank=True, null=True)),
                ('cert_approved', models.TextField(blank=True, null=True)),
                ('id_approved', models.BooleanField(default=False)),
                ('education_approved', models.BooleanField(default=False)),
                ('work_approved', models.BooleanField(default=False)),
                ('other_approved', models.BooleanField(default=False)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('bank_account_code', models.CharField(default='', max_length=30)),
                ('bank_name', models.CharField(default='', max_length=30)),
                ('bank_code', models.CharField(default='', max_length=5)),
                ('date_join', models.DateTimeField(auto_now_add=True)),
                ('special_exp', models.TextField(blank=True, null=True)),
                ('all_lesson_score_mean', models.FloatField(default=0.0)),
                ('total_number_of_remark', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '老師個人資料',
                'verbose_name_plural': '老師個人資料',
            },
        ),
        migrations.CreateModel(
            name='teacher_review_aggregated_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_auth_id', models.IntegerField(default=-1)),
                ('score_given_sum', models.PositiveIntegerField(default=0)),
                ('reviewed_times', models.PositiveIntegerField(default=0)),
                ('receiving_review_lesson_minutes_sum', models.PositiveIntegerField(default=0)),
                ('is_teacher_late_for_lesson_times', models.PositiveIntegerField(default=0)),
                ('is_teacher_frivolous_in_lesson_times', models.PositiveIntegerField(default=0)),
                ('is_teacher_incapable_times', models.PositiveIntegerField(default=0)),
                ('last_updated_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '評價-老師評價儀表板',
                'verbose_name_plural': '評價-老師評價儀表板',
                'ordering': ['-last_updated_time'],
            },
        ),
        migrations.CreateModel(
            name='user_token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=128)),
                ('logout_time', models.CharField(max_length=60)),
                ('authID_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='teacher_teaching_history',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_history', to='account.teacher_profile')),
            ],
        ),
        migrations.CreateModel(
            name='student_studying_history',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studying_history', to='account.student_profile')),
            ],
        ),
        migrations.CreateModel(
            name='specific_available_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.CharField(max_length=250)),
                ('is_occupied', models.BooleanField(default=False)),
                ('teacher_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_time', to='account.teacher_profile')),
            ],
        ),
        migrations.CreateModel(
            name='general_available_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.CharField(max_length=1)),
                ('time', models.CharField(max_length=250)),
                ('teacher_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_time', to='account.teacher_profile')),
            ],
        ),
    ]
